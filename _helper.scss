// Fylgja (getfylgja.com)
// Licensed under MIT Open Source

/// @param {String} $mq - breakpoint
/// @param {Map} $map - map to check breakpoints from
/// @return {*} - styles wrapped in a media query
@mixin flex-grid-mq($mq, $map: $breakpoints) {
    $mq-value: map-get($map, $mq);
    @if ($mq-value != 0) {
        @media (min-width: $mq-value) {
            @content;
        }
    } @else {
        @content;
    }
}

/// Creates grid gaps via the margin/padding trick
/// @param {Number} $size - the gap size
/// @param {String} $class - class to use
/// @return {*} - gap styles
@mixin flex-grid-gap($size, $class: "cell") {
    $x: if(length($size) == 2, nth($size, 2), nth($size, 1));
    $y: nth($size, 1);
    margin-right: ($x / -2);
    margin-left: ($x / -2);

    > .#{$class} {
        margin-bottom: $y;
        padding-right: ($x / 2);
        padding-left: ($x / 2);
    }
}

/// Creates grid cells
/// @param {Number} $i - How much iterations
/// @param {String} $mq - the cell media query
/// @param {Boolean} $chunks - If to render chunked sizes
/// @return {*} - cell styles
@mixin flex-grid-cells($mq, $size, $chunks: true) {
    @for $i from 1 through $size {
        > .cell.#{$mq}-#{$i} {
            flex: 0 0 auto;
            width: if($i == 1, 100%, calc(100% / #{$i}));
        }

        @if $chunks and ($i > 2) {
            @for $fi from 2 through ($i - 1) {
                > .cell.#{$mq}-#{$i}-#{$fi} {
                    flex: 0 0 auto;
                    width: calc((100% / #{$i}) * #{$fi});
                }
            }
        }
    }
}

/// Creates grid cells offsets
/// @param {Number} $i - How much iterations
/// @param {String} $mq - the cell media query
/// @param {Boolean} $chunks - If to render chunked sizes
/// @return {*} - cell offset styles
@mixin flex-grid-offsets($mq, $size, $chunks: true) {
    @for $i from 1 through $size {
        $name: if($i == 1, "none", $i);
        > .offset-#{$mq}-#{$name} {
            margin-left: if($i == 1, 0, calc(100% / #{$i}));
        }

        @if $chunks and ($i > 2) {
            @for $fi from 2 through ($i - 1) {
                > .offset-#{$mq}-#{$i}-#{$fi} {
                    margin-left: calc((100% / #{$i}) * #{$fi});
                }
            }
        }
    }
}
